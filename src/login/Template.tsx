import { useEffect } from "react";
import { clsx } from "keycloakify/tools/clsx";
import { kcSanitize } from "keycloakify/lib/kcSanitize";
import type { TemplateProps } from "keycloakify/login/TemplateProps";
import { getKcClsx } from "keycloakify/login/lib/kcClsx";
import { useSetClassName } from "keycloakify/tools/useSetClassName";
import { useInitialize } from "keycloakify/login/Template.useInitialize";
import type { I18n } from "./i18n";
import type { KcContext } from "./KcContext";
import { useStyles } from "tss-react/mui"
// import { SvgIcon, SvgIconProps } from '@mui/material';
import Alert from '@mui/material/Alert';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faCaretDown } from '@fortawesome/free-solid-svg-icons';


export default function Template(props: TemplateProps<KcContext, I18n>) {
    const {
        displayInfo = false,
        displayMessage = true,
        displayRequiredFields = false,
        // headerNode,
        socialProvidersNode = null,
        infoNode = null,
        documentTitle,
        bodyClassName,
        kcContext,
        i18n,
        doUseDefaultCss,
        classes,
        children
    } = props;

    const { kcClsx } = getKcClsx({ doUseDefaultCss, classes });

    const { msg, msgStr, currentLanguage, enabledLanguages } = i18n;

    const { auth, url, message, isAppInitiatedAction } = kcContext;

    useEffect(() => {
        document.title = documentTitle ?? msgStr("loginTitle", kcContext.realm.displayName);
    }, []);

    useSetClassName({
        qualifiedName: "html",
        className: kcClsx("kcHtmlClass")
    });

    useSetClassName({
        qualifiedName: "body",
        className: bodyClassName ?? kcClsx("kcBodyClass")
    });

    const { isReadyToRender } = useInitialize({ kcContext, doUseDefaultCss });
    
    const {css, theme, cx} = useStyles();

    if (!isReadyToRender) {
        return null;
    }

    return (
        <div className={
            cx(
                kcClsx("kcLoginClass"),
                css({
                    height: "100vh",
                    display: "flex",
                    justifyContent: "center",
                    alignItems:"center"
                })
            )
          }
          >
            <div 
                className={css({
                    backgroundColor: theme.palette.background.paper,
                    padding: theme.spacing(6),
                    borderRadius: theme.shape.borderRadius
                })}
             >
                <header className={kcClsx("kcFormHeaderClass")}>
                    {enabledLanguages.length > 1 && (
                        <div className={kcClsx("kcLocaleMainClass")} id="kc-locale">
                            <div id="kc-locale-wrapper" className={kcClsx("kcLocaleWrapperClass")}>
                                <div id="kc-locale-dropdown" className={clsx("menu-button-links", kcClsx("kcLocaleDropDownClass"))}>
                                    <button
                                        tabIndex={1}
                                        id="kc-current-locale-link"
                                        aria-label={msgStr("languages")}
                                        aria-haspopup="true"
                                        aria-expanded="false"
                                        aria-controls="language-switch1"
                                    >
                                        {currentLanguage.label}
                                        <FontAwesomeIcon  icon={faCaretDown} className={css({ marginLeft: '5px'})} />
                                    </button>
                                    <ul
                                        role="menu"
                                        tabIndex={-1}
                                        aria-labelledby="kc-current-locale-link"
                                        aria-activedescendant=""
                                        id="language-switch1"
                                        className={kcClsx("kcLocaleListClass")}
                                    >
                                        {enabledLanguages.map(({ languageTag, label, href }, i) => (
                                            <li key={languageTag} className={kcClsx("kcLocaleListItemClass")} role="none">
                                                <a role="menuitem" id={`language-${i + 1}`} className={kcClsx("kcLocaleItemClass")} href={href}>
                                                    {label}
                                                </a>
                                            </li>
                                        ))}
                                    </ul>
                                </div>
                            </div>
                        </div>
                    )}
                    {(() => {
                        const node = !(auth !== undefined && auth.showUsername && !auth.showResetCredentials) ? (
                        <center>
                            <svg id="kc-page-title" width="108" height="112" viewBox="0 0 108 112" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <g opacity="0.9">
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M107.83 78.7258C107.83 77.5706 106.888 76.6333 105.728 76.6333C104.567 76.6333 103.625 77.5706 103.625 78.7258C103.625 79.8818 104.567 80.819 105.728 80.819C106.888 80.819 107.83 79.8818 107.83 78.7258ZM104.835 77.5875V79.881H105.14V78.8627H105.494C105.572 78.8627 105.628 78.8663 105.663 78.8734C105.711 78.8851 105.756 78.9056 105.802 78.9349C105.848 78.9633 105.899 79.015 105.956 79.088C106.014 79.161 106.088 79.2668 106.178 79.403L106.482 79.881H106.865L106.464 79.2561C106.385 79.1352 106.3 79.0327 106.212 78.9509C106.169 78.9135 106.109 78.8761 106.027 78.837C106.249 78.8067 106.412 78.7364 106.517 78.6243C106.623 78.5131 106.676 78.376 106.676 78.2131C106.676 78.0868 106.645 77.971 106.581 77.8669C106.517 77.7628 106.431 77.6906 106.324 77.6488C106.218 77.6079 106.062 77.5875 105.856 77.5875H104.835ZM105.795 78.6002H105.14V77.841H105.868C106.04 77.841 106.165 77.8758 106.244 77.9452C106.322 78.0155 106.363 78.1045 106.363 78.2131C106.363 78.2869 106.342 78.3555 106.301 78.4187C106.26 78.4819 106.2 78.5282 106.121 78.5566C106.044 78.5851 105.934 78.6002 105.795 78.6002ZM107.541 78.7258C107.541 77.7289 106.728 76.9208 105.728 76.9208C104.726 76.9208 103.913 77.7289 103.913 78.7258C103.913 79.7234 104.726 80.5324 105.728 80.5324C106.728 80.5324 107.541 79.7234 107.541 78.7258ZM76.7172 99.4253V102.165C75.2496 102.165 74.1 101.988 73.2683 101.635C72.437 101.282 71.8071 100.862 71.379 100.375C70.9509 99.888 70.6878 99.3949 70.5901 98.896C70.4923 98.3967 70.4432 98.0132 70.4432 97.7455V97.088V85.4001H68.0953V82.8068H70.4432V77.9489H73.5621V82.8068H76.7172V85.4001H73.5621V96.7958V97.1246C73.5621 97.3436 73.5927 97.581 73.6537 97.8367C73.7148 98.0924 73.8554 98.3421 74.0756 98.5855C74.2959 98.8288 74.6077 99.0299 75.0112 99.1881C75.4148 99.3464 75.9467 99.4253 76.6073 99.4253H76.7172ZM63.8394 82.8434C64.255 82.8434 64.6159 82.8372 64.9216 82.8249C65.2275 82.8129 65.5514 82.831 65.8941 82.8798L65.1968 85.5463C64.9035 85.5463 64.6589 85.5522 64.4631 85.5644C64.2674 85.5767 64.0348 85.5825 63.7659 85.5825C63.1055 85.5825 62.5736 85.6678 62.1699 85.8383C61.7663 86.0088 61.4546 86.2095 61.2346 86.441C61.0144 86.6724 60.8738 86.9159 60.8126 87.1715C60.7513 87.4273 60.7206 87.6646 60.7206 87.8836V88.2124V102.165H57.6022V88.1028V87.2628C57.6022 86.995 57.6511 86.6115 57.7489 86.1122C57.8468 85.6131 58.1036 85.12 58.5195 84.633C58.9351 84.146 59.5589 83.726 60.3905 83.3729C61.2222 83.0198 62.3718 82.8434 63.8394 82.8434ZM50.9246 92.486C50.8757 92.7295 50.7536 92.9119 50.5577 93.0338C50.3621 93.1554 50.1788 93.2407 50.0075 93.2893C49.6404 93.4112 49.2431 93.5512 48.815 93.7094C48.387 93.8677 47.9897 94.0078 47.6227 94.1294C47.1825 94.2755 46.7667 94.4217 46.3752 94.5677C46.0817 94.6894 45.8003 94.8601 45.5313 95.0791C45.3112 95.2737 45.1095 95.5234 44.9259 95.8279C44.7425 96.1322 44.6508 96.5158 44.6508 96.9784C44.6508 97.9036 44.871 98.5915 45.3112 99.0418C45.7516 99.4926 46.5708 99.7177 47.7695 99.7177C48.9924 99.7177 49.8241 99.4803 50.2644 99.0056C50.7044 98.5306 50.9246 97.8551 50.9246 96.9784V92.486ZM47.7695 82.8068C49.9218 82.8068 51.4997 83.2268 52.5024 84.0669C53.5051 84.907 54.0066 85.9603 54.0066 87.2261V88.9795V96.9784V98.0375C54.0066 98.4759 53.9271 98.9569 53.7683 99.4803C53.6092 100.004 53.2972 100.485 52.8325 100.923C52.3679 101.361 51.7319 101.727 50.9246 102.019C50.1176 102.311 49.0657 102.457 47.7695 102.457C46.4731 102.457 45.4212 102.311 44.6142 102.019C43.8069 101.727 43.1709 101.361 42.7062 100.923C42.2416 100.485 41.9298 100.004 41.7706 99.4803C41.6117 98.9569 41.5322 98.4759 41.5322 98.0375V96.3208C41.5322 95.3956 41.7706 94.5556 42.2478 93.8007C42.7247 93.0458 43.4035 92.5103 44.2841 92.1936C44.7243 92.0476 45.2255 91.8771 45.7883 91.6823C46.3506 91.4875 46.8949 91.2989 47.4208 91.1162C47.9468 90.9334 48.4053 90.7692 48.7968 90.6231C49.1882 90.4769 49.4328 90.3916 49.5305 90.3673C49.6284 90.3188 49.7567 90.2516 49.9157 90.1666C50.0746 90.0814 50.2276 89.9534 50.3745 89.7831C50.521 89.6126 50.6497 89.4176 50.7594 89.1986C50.8695 88.9795 50.9246 88.7237 50.9246 88.4316V87.7378C50.9246 87.4941 50.8757 87.2447 50.7779 86.9889C50.68 86.7331 50.509 86.4958 50.2644 86.2768C50.0197 86.0575 49.6955 85.881 49.2919 85.747C48.8885 85.6131 48.3807 85.5463 47.7695 85.5463C46.5464 85.5463 45.7208 85.7957 45.293 86.2948C44.8648 86.7941 44.6508 87.3966 44.6508 88.1028H41.5322V87.2261C41.5322 86.6176 41.6485 86.0454 41.8807 85.5097C42.1133 84.974 42.4862 84.5052 42.9997 84.1035C43.5136 83.7015 44.1616 83.3852 44.9445 83.1536C45.727 82.9225 46.6687 82.8068 47.7695 82.8068ZM37.9369 102.165H34.8182V88.1394V87.8108C34.8182 87.5916 34.7876 87.3543 34.7266 87.0985C34.6653 86.8427 34.5308 86.5992 34.3228 86.368C34.115 86.1367 33.8092 85.9417 33.4057 85.7836C33.0023 85.6252 32.4578 85.5463 31.773 85.5463C31.088 85.5463 30.5317 85.6252 30.1035 85.7836C29.6757 85.9417 29.3454 86.1305 29.113 86.3496C28.8806 86.5688 28.7277 86.8063 28.6544 87.0619C28.5811 87.3177 28.5443 87.5428 28.5443 87.7378V88.1394V102.165H25.4257V88.1394V87.8108C25.4257 87.5916 25.3952 87.3543 25.3341 87.0985C25.2727 86.8427 25.1382 86.5992 24.9304 86.368C24.7224 86.1367 24.4169 85.9417 24.013 85.7836C23.6097 85.6252 23.0653 85.5463 22.3806 85.5463C21.6958 85.5463 21.1391 85.6252 20.7113 85.7836C20.2831 85.9417 19.9528 86.1305 19.7206 86.3496C19.488 86.5688 19.3354 86.8063 19.262 87.0619C19.1885 87.3177 19.1519 87.5428 19.1519 87.7378V88.1394V102.165H16.0699V87.8836V87.2261C16.0699 86.9341 16.1189 86.5445 16.2168 86.0575C16.3145 85.5706 16.5715 85.0836 16.9873 84.5966C17.403 84.1095 18.0267 83.6896 18.8582 83.3365C19.6901 82.9834 20.8396 82.8068 22.3073 82.8068C23.4813 82.8068 24.4413 82.9225 25.1874 83.1536C25.9331 83.3852 26.5386 83.6711 27.0034 84.0122C27.4682 83.6711 28.0734 83.3852 28.8194 83.1536C29.5656 82.9225 30.5255 82.8068 31.6996 82.8068C33.1671 82.8068 34.3169 82.9834 35.1483 83.3365C35.9801 83.6896 36.6038 84.1095 37.0196 84.5966C37.4354 85.0836 37.6921 85.5767 37.79 86.0756C37.8877 86.5749 37.9369 86.9584 37.9369 87.2261V87.5916V102.165ZM9.35591 88.1028C9.35591 87.3966 9.14185 86.7941 8.71373 86.2948C8.2857 85.7957 7.46017 85.5463 6.23734 85.5463C5.62568 85.5463 5.11817 85.6131 4.71453 85.747C4.31108 85.881 3.98701 86.0575 3.74242 86.2768C3.49764 86.4958 3.32659 86.7331 3.22868 86.9889C3.13096 87.2447 3.082 87.4941 3.082 87.7378V88.4316C3.082 88.7237 3.1372 88.9795 3.2471 89.1986C3.35721 89.4176 3.48564 89.6126 3.63232 89.7831C3.77899 89.9534 3.93201 90.0814 4.09087 90.1666C4.24993 90.2516 4.37827 90.3188 4.47618 90.3673C4.5739 90.3916 4.81849 90.4769 5.20985 90.6231C5.6013 90.7692 6.05995 90.9334 6.58579 91.1162C7.11173 91.2989 7.6558 91.4875 8.21831 91.6823C8.78101 91.8771 9.28237 92.0476 9.72259 92.1936C10.6031 92.5103 11.2821 93.0458 11.7589 93.8007C12.236 94.5556 12.4744 95.3956 12.4744 96.3208V98.0375C12.4744 98.4759 12.3949 98.9569 12.236 99.4803C12.077 100.004 11.7651 100.485 11.3003 100.923C10.8357 101.361 10.1997 101.727 9.39248 102.019C8.58538 102.311 7.5335 102.457 6.23734 102.457C4.94087 102.457 3.8891 102.311 3.082 102.019C2.27481 101.727 1.63877 101.361 1.17398 100.923C0.709386 100.485 0.397698 100.004 0.238444 99.4803C0.0795801 98.9569 0 98.4759 0 98.0375V96.9784H3.082C3.082 97.8551 3.3022 98.5306 3.74242 99.0056C4.18244 99.4803 5.01421 99.7177 6.23734 99.7177C7.43579 99.7177 8.25508 99.4926 8.69549 99.0418C9.1357 98.5915 9.35591 97.9036 9.35591 96.9784C9.35591 96.5158 9.27019 96.1322 9.09894 95.8279C8.92769 95.5234 8.73225 95.2737 8.51204 95.0791C8.24288 94.8601 7.94934 94.6894 7.63142 94.5677C6.89756 94.2998 6.21257 94.0564 5.57692 93.8373C5.01421 93.6424 4.46995 93.4537 3.94401 93.2711C3.41817 93.0884 3.03285 92.9607 2.78826 92.8876C2.54377 92.7902 2.26243 92.6442 1.9445 92.4494C1.62678 92.2545 1.32085 91.9986 1.0275 91.6823C0.733762 91.3658 0.489178 90.9824 0.293548 90.5317C0.0977231 90.0814 0 89.5639 0 88.9795V87.2261C0 85.9603 0.501557 84.907 1.50428 84.0669C2.5073 83.2268 4.08472 82.8068 6.23734 82.8068C7.33778 82.8068 8.27966 82.9225 9.06237 83.1536C9.84508 83.3852 10.493 83.7015 11.007 84.1035C11.5205 84.5052 11.8933 84.974 12.1259 85.5097C12.3581 86.0454 12.4744 86.6176 12.4744 87.2261V88.1028H9.35591ZM104.748 87.9203C104.723 87.6036 104.656 87.2994 104.546 87.0072C104.436 86.715 104.265 86.4592 104.033 86.2402C103.8 86.021 103.482 85.8507 103.078 85.7288C102.675 85.6072 102.18 85.5464 101.593 85.5464C100.981 85.5464 100.473 85.6131 100.07 85.747C99.6664 85.8811 99.3484 86.0576 99.1161 86.2768C98.8836 86.4958 98.7184 86.7331 98.6207 86.9889C98.5228 87.2447 98.4739 87.5063 98.4739 87.7742V95.5176V95.7V100.229C98.5228 99.9613 98.639 99.7665 98.8226 99.6446C99.0061 99.523 99.1956 99.4377 99.3913 99.3892C99.7827 99.2672 100.186 99.1272 100.602 98.9691C101.018 98.8107 101.409 98.6707 101.776 98.5488C102.216 98.403 102.632 98.2568 103.023 98.1108C103.341 97.989 103.635 97.8183 103.904 97.5993C104.124 97.4044 104.32 97.1551 104.491 96.8506C104.662 96.5462 104.748 96.1628 104.748 95.7V95.5176V87.9203ZM107.83 95.5176V96.3577C107.83 97.2828 107.598 98.1229 107.133 98.8776C106.668 99.6327 105.983 100.168 105.078 100.485C104.638 100.631 104.137 100.801 103.574 100.996L103.066 101.172L103.065 101.172C102.682 101.305 102.307 101.435 101.941 101.562C101.415 101.745 100.957 101.909 100.565 102.055C100.174 102.202 99.9294 102.287 99.8315 102.311C99.7336 102.36 99.6115 102.427 99.4646 102.512C99.3177 102.597 99.1711 102.725 99.0242 102.895C98.8777 103.066 98.7491 103.261 98.639 103.48C98.5291 103.699 98.4739 103.954 98.4739 104.247V104.904V112H95.3554V87.19C95.3554 85.9478 95.8875 84.907 96.878 84.067C97.8684 83.2269 99.4402 82.8068 101.593 82.8068C102.693 82.8068 103.635 82.9225 104.418 83.1537C105.2 83.3852 105.849 83.7015 106.362 84.1036C106.876 84.5052 107.249 84.974 107.481 85.5097C107.713 86.0455 107.83 86.6177 107.83 87.2262V88.1029V95.5176ZM91.7598 97.3437V98.0012C91.7598 98.2934 91.7109 98.6831 91.613 99.1699C91.5153 99.6569 91.2583 100.144 90.8426 100.631C90.4269 101.118 89.8031 101.538 88.9716 101.891C88.1398 102.244 86.9902 102.421 85.5227 102.421C84.0551 102.421 82.9056 102.244 82.0737 101.891C81.2422 101.538 80.6185 101.118 80.2029 100.631C79.787 100.144 79.53 99.6508 79.4323 99.1515C79.3344 98.6526 79.2855 98.2691 79.2855 98.0012V97.5993V83.0626H82.3675V97.0513H82.404V97.4167C82.404 97.6116 82.4346 97.8428 82.4957 98.1108C82.5571 98.3787 82.6915 98.6281 82.8993 98.8595C83.1074 99.0908 83.4129 99.2854 83.8167 99.4439C84.2202 99.6021 84.7645 99.6812 85.4493 99.6812C86.1585 99.6812 86.7213 99.6021 87.1371 99.4439C87.5529 99.2854 87.8708 99.0968 88.091 98.8776C88.311 98.6584 88.4576 98.421 88.5312 98.1656C88.6045 97.9098 88.6413 97.6725 88.6413 97.4533V97.0513H88.6778V83.0626H91.7598V97.3437Z" fill="#4B4B4D"/>
                                    <ellipse cx="53.9224" cy="34.4616" rx="34.6169" ry="34.4615" fill="white"/>
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M37.2468 4.28333C31.789 7.2614 27.2524 11.6633 24.0962 16.9977C24.3212 18.1057 24.5739 19.208 24.8598 20.3019C26.0272 24.7682 27.6908 29.0916 29.8284 33.1858C35.4905 23.6784 43.5854 15.8213 53.309 10.4679C48.2745 7.67548 42.8618 5.58673 37.2468 4.28333V4.28333Z" fill="#F58634"/>
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M70.2015 4.09409C70.1534 4.06834 70.1053 4.04307 70.0568 4.01763L69.8311 3.89929C69.6603 3.80987 69.4878 3.72331 69.3148 3.63752L69.0899 3.52597C68.9185 3.44097 68.7454 3.36009 68.5723 3.27888C68.497 3.24349 68.4216 3.20842 68.3461 3.17351C68.1716 3.09325 67.9962 3.01472 67.8201 2.93747C67.7421 2.90318 67.6643 2.86891 67.5858 2.8351C67.4057 2.75737 67.2248 2.68137 67.0432 2.60696L66.8314 2.52022C66.6435 2.44328 66.4542 2.37013 66.2647 2.29777L66.0592 2.21925C65.8713 2.14753 65.6821 2.07944 65.4926 2.01229L65.272 1.93409C65.0828 1.86694 64.8926 1.80391 64.7016 1.74118L64.4882 1.67103C64.2947 1.60752 64.1 1.54796 63.905 1.48919L63.6974 1.42647C63.4974 1.36612 63.2965 1.31019 63.0953 1.25442L62.9015 1.20086C62.6936 1.14336 62.4847 1.0909 62.2757 1.03829L62.0991 0.993905C61.8804 0.938925 61.6603 0.889471 61.4405 0.839704L61.2937 0.806525C61.0707 0.756285 60.8466 0.711261 60.6225 0.66655L60.4735 0.63685C60.2453 0.59135 60.0162 0.550905 59.7871 0.510776L59.6537 0.487394C59.4168 0.445686 59.1789 0.409346 58.941 0.373956L58.8328 0.358003C58.5868 0.321666 58.3401 0.289274 58.0935 0.259099L58.0017 0.24772C57.7468 0.216439 57.4915 0.18943 57.236 0.164152L57.1697 0.157672C56.9123 0.132078 56.6544 0.112015 56.3966 0.0924245L56.3223 0.0868934C56.0618 0.0673029 55.8008 0.0546648 55.5399 0.0404458L55.4774 0.0369667C55.2084 0.0225898 54.939 0.0151641 54.6698 0.00900254L54.6396 0.00836997C54.3615 0.00236643 54.0833 0 53.8052 0H53.7875C53.5104 0 53.2331 0.00632014 52.9559 0.0124817L52.9246 0.0131142C52.6455 0.0189598 52.3668 0.0342785 52.0882 0.0462855L52.0671 0.0472344C49.7316 0.147083 47.4136 0.542686 45.1503 1.11492L45.137 1.1184C44.8646 1.18728 44.594 1.2628 44.324 1.3399L44.2568 1.35901C43.9965 1.43343 43.7368 1.51132 43.4784 1.59221L43.4023 1.61606C43.1547 1.69379 42.9075 1.77389 42.6621 1.8581L42.5359 1.90138C42.3184 1.97611 42.1015 2.05274 41.8858 2.1322L41.6563 2.21705C41.4606 2.28909 41.2662 2.36444 41.0723 2.44107C40.9794 2.47788 40.8869 2.51516 40.7942 2.55245C40.6457 2.61232 40.498 2.67394 40.3503 2.73588C40.2068 2.79639 40.0641 2.85769 39.9214 2.91994C39.8161 2.96591 39.7108 3.01252 39.6058 3.0596C39.4318 3.13733 39.2591 3.21806 39.086 3.29784L39.0766 3.3021L38.9296 3.37209C38.7588 3.45456 38.5881 3.53797 38.418 3.62218C43.9374 5.00142 49.2527 7.12999 54.1989 9.93301C58.5247 7.64724 63.1075 5.87842 67.8485 4.65211C68.629 4.45036 69.4137 4.26488 70.2015 4.09409V4.09409Z" fill="#A8CF45"/>
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M22.9468 49.8052C24.3332 44.3144 26.4728 39.0268 29.2907 34.1065C26.9931 29.8035 25.2151 25.2446 23.9826 20.5287C23.7797 19.7523 23.5934 18.972 23.4214 18.1882C23.3974 18.2331 23.3733 18.2776 23.3496 18.3228L23.2223 18.5631C23.1349 18.7279 23.0509 18.8944 22.967 19.0609C22.9273 19.1399 22.8874 19.2186 22.8485 19.2978C22.7651 19.4665 22.6835 19.6365 22.6028 19.8067C22.5671 19.8822 22.5312 19.9577 22.4961 20.0335C22.4154 20.2073 22.3363 20.3817 22.2586 20.5569C22.2242 20.6344 22.1897 20.7119 22.1557 20.79C22.0776 20.9691 22.0015 21.1492 21.9264 21.3301C21.8976 21.3995 21.8686 21.4687 21.8401 21.5384C21.7634 21.7264 21.6888 21.9148 21.6156 22.1041L21.5366 22.3086C21.4645 22.4958 21.3962 22.6841 21.3284 22.8726C21.3023 22.9448 21.2763 23.0168 21.2507 23.089C21.184 23.2783 21.1192 23.4683 21.056 23.6589L20.9855 23.8712C20.9216 24.0636 20.8621 24.2578 20.8027 24.4518L20.7395 24.6583C20.6786 24.8567 20.6226 25.0564 20.5668 25.2563L20.513 25.4494C20.4556 25.656 20.4023 25.8639 20.3494 26.072L20.3048 26.2477C20.2495 26.4652 20.1999 26.6842 20.1497 26.9028L20.1164 27.0488C20.0659 27.271 20.0208 27.4939 19.9757 27.717L19.9458 27.8648C19.8997 28.0917 19.8596 28.3195 19.8192 28.5472L19.7956 28.6802C19.7536 28.9162 19.7176 29.1531 19.6818 29.39L19.6655 29.4978C19.6283 29.7424 19.597 29.9879 19.566 30.2334L19.5545 30.3245C19.5225 30.5783 19.497 30.8325 19.4709 31.0865L19.4641 31.1524C19.4376 31.408 19.4183 31.664 19.3985 31.9201L19.3929 31.994C19.3732 32.2531 19.3605 32.5127 19.3462 32.7722L19.3427 32.8343C19.3283 33.102 19.3208 33.3699 19.3148 33.6377L19.314 33.6677C19.308 33.9444 19.3056 34.2212 19.3056 34.4978V34.5153C19.3056 34.7921 19.3143 35.0689 19.3183 35.3457L19.3188 35.3768C19.3226 35.6516 19.3372 35.9265 19.3518 36.2011L19.3531 36.2219C19.4785 38.5458 19.8402 40.8522 20.4259 43.1053L20.4294 43.1183C20.4999 43.3892 20.5743 43.659 20.6524 43.9281L20.672 43.9949C20.7474 44.254 20.8246 44.5128 20.9062 44.77L20.9302 44.8457C21.0084 45.092 21.0889 45.3378 21.1735 45.5819L21.2171 45.7075C21.2922 45.9238 21.3692 46.1398 21.4491 46.3545L21.5344 46.5828C21.607 46.7773 21.6831 46.9706 21.7599 47.1637C21.7966 47.2558 21.8343 47.3476 21.8717 47.4395C21.9321 47.5872 21.9936 47.7343 22.056 47.8814C22.1168 48.0241 22.1781 48.1663 22.241 48.3082C22.2872 48.4129 22.3341 48.5175 22.3813 48.6219C22.4597 48.7949 22.5407 48.967 22.6209 49.1392L22.6254 49.1485L22.6961 49.2961C22.7786 49.4662 22.8622 49.636 22.9468 49.8052V49.8052Z" fill="#FFCC29"/>
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M36.3957 64.158C37.5092 63.9339 38.6177 63.6826 39.7174 63.398C44.2075 62.237 48.5539 60.5822 52.6698 58.4559C43.1092 52.8203 35.1834 44.7158 29.8007 35.0424C26.9933 40.0588 24.9243 45.4879 23.6138 51.0766C26.6077 56.5055 31.0329 61.0181 36.3957 64.158Z" fill="#91D8F7"/>
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M69.3772 65.3012C63.8573 63.9222 58.5417 61.7937 53.5952 58.9907C49.2693 61.2762 44.6862 63.0449 39.9452 64.2708C39.1651 64.4726 38.3805 64.6581 37.5928 64.829C37.6379 64.8529 37.6831 64.8767 37.7283 64.9006L37.9696 65.0276C38.1351 65.1145 38.3023 65.1979 38.4696 65.2812C38.5488 65.3204 38.6282 65.36 38.7078 65.3989C38.8774 65.4818 39.0483 65.5629 39.2194 65.6431C39.2956 65.6788 39.3715 65.7145 39.4476 65.7498C39.6222 65.83 39.7977 65.9082 39.9737 65.9855C40.0515 66.0198 40.1295 66.054 40.2079 66.0879C40.3884 66.1656 40.5699 66.2414 40.7513 66.3163C40.8207 66.3449 40.8901 66.3737 40.9597 66.4016C41.1488 66.4776 41.3388 66.5525 41.5291 66.6253L41.7346 66.7037C41.9226 66.7754 42.1121 66.8432 42.3018 66.9108C42.3743 66.9369 42.4469 66.9628 42.5193 66.9882C42.7098 67.0547 42.9005 67.1189 43.0921 67.1818L43.3055 67.2519C43.499 67.3156 43.6937 67.375 43.8888 67.4339L44.0963 67.4965C44.2963 67.557 44.4972 67.6128 44.6984 67.6685L44.8925 67.7221C45.1001 67.7796 45.309 67.8322 45.518 67.8847L45.6946 67.929C45.9133 67.984 46.1331 68.0336 46.3533 68.0831L46.5003 68.1163C46.7233 68.1665 46.9474 68.2115 47.1717 68.2564L47.3204 68.2861C47.5484 68.3319 47.7775 68.372 48.0063 68.4122L48.1401 68.4356C48.377 68.4773 48.6148 68.5138 48.8527 68.549L48.961 68.5649C49.2072 68.6013 49.4537 68.6335 49.7007 68.664L49.7923 68.6752C50.0469 68.7065 50.3022 68.7335 50.5577 68.7588L50.624 68.7654C50.8819 68.7909 51.1402 68.8103 51.3986 68.8305L51.4729 68.8364C51.7327 68.8569 51.9934 68.8686 52.2539 68.8827L52.3163 68.886C52.5853 68.9004 52.8547 68.9078 53.1239 68.9139L53.1541 68.9146C53.4322 68.9207 53.7105 68.923 53.9886 68.923H54.0062C54.2834 68.923 54.5607 68.9166 54.8378 68.9106L54.8691 68.9098C55.148 68.904 55.4268 68.8887 55.7055 68.8768L55.7266 68.8759C58.0622 68.776 60.3804 68.3902 62.6418 67.8085L62.6548 67.8052C62.9277 67.7347 63.1993 67.66 63.4702 67.5829L63.5376 67.5636C63.7979 67.4895 64.0571 67.4118 64.3154 67.3309L64.3914 67.3069C64.639 67.2292 64.8862 67.1492 65.1316 67.0648L65.2578 67.0216C65.4753 66.947 65.6924 66.8704 65.9081 66.7907L66.1377 66.7059C66.3333 66.6339 66.5277 66.5585 66.7214 66.4819C66.8143 66.4454 66.9068 66.4079 66.9992 66.3705C67.1477 66.3106 67.2957 66.249 67.4435 66.1871C67.5869 66.1267 67.7297 66.0654 67.8721 66.0032C67.9776 65.9572 68.0827 65.9104 68.1877 65.8637C68.3616 65.7856 68.5346 65.7049 68.7077 65.6251L68.7171 65.6208L68.8654 65.5505C69.0365 65.4684 69.2072 65.3853 69.3772 65.3012V65.3012Z" fill="#0098DA"/>
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M54.5358 58.4834C59.5703 61.2759 64.9831 63.3643 70.598 64.6679C76.0557 61.6899 80.5925 57.2881 83.7488 51.9533C83.5235 50.8456 83.2708 49.7434 82.9849 48.6495C81.8175 44.183 80.154 39.8595 78.0163 35.7654C72.3543 45.2729 64.2593 53.13 54.5358 58.4834Z" fill="#7A75B5"/>
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M78.5224 34.788C79.3712 36.3865 80.1195 38.0594 80.8117 39.7282C81.9534 42.4806 83.1087 45.5387 83.8623 48.4225C84.0561 49.1641 84.283 49.9542 84.4447 50.7229C84.4617 50.6913 84.4785 50.6596 84.4955 50.6278L84.6231 50.3877C84.7106 50.2232 84.7945 50.0569 84.878 49.8905C84.9175 49.8115 84.9571 49.7327 84.9963 49.6534C85.0797 49.4845 85.1613 49.3148 85.242 49.1445C85.2778 49.0688 85.3138 48.9933 85.3492 48.9176C85.4298 48.744 85.5086 48.5693 85.5862 48.3944C85.6207 48.3168 85.6551 48.2392 85.6891 48.1613C85.7673 47.9819 85.8434 47.8013 85.9186 47.6207C85.9474 47.5518 85.9765 47.4828 86.0046 47.4136C86.081 47.2254 86.1561 47.0365 86.2293 46.847L86.3083 46.6426C86.3802 46.4555 86.4485 46.2671 86.5165 46.0784C86.5425 46.0064 86.5686 45.9342 86.5941 45.862C86.661 45.6727 86.7256 45.483 86.7889 45.2924L86.8594 45.0801C86.9232 44.8875 86.9831 44.694 87.0422 44.5001L87.1052 44.2933C87.1658 44.0946 87.2221 43.8945 87.278 43.6944L87.3321 43.5015C87.3899 43.295 87.4426 43.0874 87.4955 42.8796L87.5401 42.7035C87.5952 42.4859 87.6453 42.2673 87.6948 42.0485L87.7282 41.9022C87.7787 41.6804 87.8241 41.4574 87.869 41.2342L87.8991 41.0863C87.945 40.8596 87.9853 40.6318 88.0256 40.404L88.0493 40.2711C88.0912 40.0352 88.1279 39.7989 88.1632 39.562L88.1794 39.4543C88.2158 39.2096 88.2485 38.9644 88.2788 38.7189L88.2901 38.6275C88.3217 38.3741 88.3489 38.1201 88.3743 37.866L88.3808 37.8003C88.4063 37.5438 88.4259 37.2867 88.4464 37.0298L88.4522 36.9559C88.4727 36.6973 88.4846 36.438 88.4986 36.1791L88.5021 36.1168C88.5166 35.8493 88.524 35.5812 88.5301 35.3134L88.5309 35.2834C88.5369 35.0069 88.5393 34.7301 88.5393 34.4535V34.436C88.5393 34.1603 88.5329 33.8843 88.5267 33.6086L88.5261 33.5775C88.5202 33.3 88.5048 33.0228 88.4928 32.7455L88.4918 32.7246C88.3914 30.4014 88.0037 28.0954 87.4188 25.846L87.4154 25.8329C87.3448 25.5615 87.2699 25.2915 87.1923 25.0221L87.1729 24.9554C87.0982 24.6963 87.0199 24.4383 86.9386 24.1813L86.9146 24.1056C86.8365 23.8591 86.756 23.6135 86.6712 23.3694L86.6278 23.2438C86.5527 23.0273 86.4757 22.8114 86.3956 22.5968L86.3105 22.3685C86.2379 22.1739 86.1623 21.9805 86.0853 21.7878C86.0486 21.6953 86.0109 21.6034 85.9733 21.5114C85.9129 21.3639 85.8511 21.2166 85.7889 21.0697C85.7281 20.9269 85.6664 20.7847 85.6038 20.643C85.5576 20.5381 85.5108 20.4335 85.4636 20.3294C85.3855 20.1572 85.306 19.9856 85.2252 19.8148L85.1488 19.6551C85.0661 19.4848 84.9825 19.3146 84.8977 19.1453C83.5076 24.6292 81.3385 29.8739 78.5224 34.788V34.788Z" fill="#A53692"/>
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M84.2302 17.8746C81.2363 12.4456 76.8109 7.93303 71.4481 4.79333C70.3346 5.01736 69.2264 5.26872 68.1267 5.5531C63.6365 6.71431 59.2901 8.36908 55.1742 10.4954C64.732 16.1274 72.6309 24.1797 78.0128 33.8516C80.8202 28.844 82.9197 23.4598 84.2302 17.8746V17.8746Z" fill="#D2E28B"/>
                                </g>
                            </svg>
                        </center>
                        ) : (
                            <div id="kc-username" className={kcClsx("kcFormGroupClass")}>
                                <label id="kc-attempted-username">{auth.attemptedUsername}</label>
                                <a id="reset-login" href={url.loginRestartFlowUrl} aria-label={msgStr("restartLoginTooltip")}>
                                    <div className="kc-login-tooltip">
                                        <i className={kcClsx("kcResetFlowIcon")}></i>
                                        <span className="kc-tooltip-text">{msg("restartLoginTooltip")}</span>
                                    </div>
                                </a>
                            </div>
                        );

                        if (displayRequiredFields) {
                            return (
                                <div className={kcClsx("kcContentWrapperClass")}>
                                    <div className={clsx(kcClsx("kcLabelWrapperClass"), "subtitle")}>
                                        <span className="subtitle">
                                            <span className="required">*</span>
                                            {msg("requiredFields")}
                                        </span>
                                    </div>
                                    <div className="col-md-10">{node}</div>
                                </div>
                            );
                        }

                        return node;
                    })()}
                </header>
                <div id="kc-content">
                    <div id="kc-content-wrapper">
                        {/* App-initiated actions should not see warning messages about the need to complete the action during login. */}
                        {displayMessage && message !== undefined && (message.type !== "warning" || !isAppInitiatedAction) && (
                                  <Alert    
                                    severity={message.type}
                                    sx={{
                                        mb: 3,
                                        mt: 3
                                    }}
                                   >     
                                    <span
                                        className={kcClsx("kcAlertTitleClass")}
                                        dangerouslySetInnerHTML={{
                                            __html: kcSanitize(message.summary)
                                        }}
                                    />
                              </Alert>
                        )}
                        {children}
                        {auth !== undefined && auth.showTryAnotherWayLink && (
                            <form id="kc-select-try-another-way-form" action={url.loginAction} method="post">
                                <div className={kcClsx("kcFormGroupClass")}>
                                    <input type="hidden" name="tryAnotherWay" value="on" />
                                    <a
                                        href="#"
                                        id="try-another-way"
                                        onClick={() => {
                                            document.forms["kc-select-try-another-way-form" as never].submit();
                                            return false;
                                        }}
                                    >
                                        {msg("doTryAnotherWay")}
                                    </a>
                                </div>
                            </form>
                        )}
                        {socialProvidersNode}
                        {displayInfo && (
                            <div
                                className={css({
                                    display: "flex",
                                    justifyContent: "center",
                                    alignItems: "center",
                                    marginTop: theme.spacing(3)
                                })}>
                                {infoNode}
                            </div>
                        )}
                    </div>
                </div>
            </div>
        </div>
    );
}
